// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire_di

import (
	"github.com/nuno-bastos/gin-gonic-wire-api/api"
	"github.com/nuno-bastos/gin-gonic-wire-api/api/controller"
	"github.com/nuno-bastos/gin-gonic-wire-api/db"
	"github.com/nuno-bastos/gin-gonic-wire-api/repo"
	"github.com/nuno-bastos/gin-gonic-wire-api/service"
	"github.com/nuno-bastos/gin-gonic-wire-api/service/filters"
)

// Injectors from wire.go:

// Inject initializes the github.com/nuno-bastos/gin-gonic-wire-api application by setting up all required dependencies
// and returns an instance of the HTTP server.
func Inject() (*server.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase()
	if err != nil {
		return nil, err
	}
	managerChainRepository := repo.NewManagerChainRepository(gormDB)
	userRepository := repo.NewUserRepository(gormDB)
	securityMatrixRuleRepository, err := repo.NewSecurityMatrixRuleRepository(gormDB)
	if err != nil {
		return nil, err
	}
	allowReportsFilter := filters.NewAllowReportsFilter()
	denyManagersFilter := filters.NewDenyManagersFilter()
	denyProfileLevelsFilter := filters.NewDenyProfileLevelsFilter()
	v := filters.ProvideManagerFilters(allowReportsFilter, denyManagersFilter, denyProfileLevelsFilter)
	allowSelfFilter := filters.NewAllowSelfFilter()
	denySelfFilter := filters.NewDenySelfFilter()
	v2 := filters.ProvideEmployeeFilters(allowSelfFilter, denySelfFilter)
	securityMatrixService := service.NewSecurityMatrixCalculatorService(managerChainRepository, userRepository, securityMatrixRuleRepository, v, v2)
	calculateSecurityMatrixController := controller.NewCalculateGoSecurityMatrixController(securityMatrixService)
	serverHTTP := server.StartServer(calculateSecurityMatrixController)
	return serverHTTP, nil
}
